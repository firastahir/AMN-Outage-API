/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ameren.status.api;

import java.io.IOException;
import java.util.Optional;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ameren.status.model.OutageStatus;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-02-21T17:03:48.228-06:00")

@Api(value = "accounts", description = "the accounts API")
public interface OutageStatusApi {

    Logger log = LoggerFactory.getLogger(OutageStatusApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Returns outage status for a customer", nickname = "statusRequest", notes = "", response = OutageStatus.class, tags={ "Status", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = OutageStatus.class) })
    @RequestMapping(value = "/accounts/{account}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<OutageStatus> statusRequest(@ApiParam(value = "",required=true) @PathVariable("account") String account) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"outageStatus\" : \"outageStatus\",  \"orderNumber\" : \"orderNumber\",  \"postalCode\" : \"63141\",  \"houseNumber\" : \"1234\",  \"cause\" : \"cause\",  \"knownOutage\" : true,  \"esrtCalcMethod\" : \"Manual\",  \"customersImpacted\" : 0,  \"reported\" : true,  \"outageDateTime\" : \"2000-01-23T04:56:07.000+00:00\",  \"state\" : \"MO\",  \"lastUpdatedDateTime\" : \"2000-01-23T04:56:07.000+00:00\",  \"account\" : \"0100500104\",  \"restoredDateTime\" : \"2000-01-23T04:56:07.000+00:00\",  \"esrt\" : \"2000-01-23T04:56:07.000+00:00\"}", OutageStatus.class), HttpStatus.OK);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default AccountsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
