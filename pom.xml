<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ameren.status</groupId>
	<artifactId>outage-status-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>OutageStatusAPI</name>
	<description>OutageStatusAPI springboot api</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<springfox-version>2.7.0</springfox-version>
		<docker.plugin.version>0.4.13</docker.plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- PLEASE DO NOT move the org.json dependency after spring-boot-starter-test
			 It causes some unexpected behavior and as of 3/13/2018 we don't have a good solution
			 except to bring in the json dependency before spring-boot-starter-test -->
        <dependency>
    		<groupId>org.json</groupId>
    		<artifactId>json</artifactId>
    	</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-aws</artifactId>
			<version>1.2.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>1.3.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<dockerDirectory>.</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					<buildArgs>
						<REPO_PORT>8910</REPO_PORT>
					</buildArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<useBeanValidation>true</useBeanValidation>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<typeMappings>
								<!-- <typeMapping>OffsetDateTime=ZonedDateTime</typeMapping> -->
							</typeMappings>
							<importMappings>
								<!-- <importMapping>java.time.OffsetDateTime=java.time.ZonedDateTime</importMapping> -->
							</importMappings>
							<inputSpec>src/main/resources/outage-status-api.yaml</inputSpec>
							<language>spring</language>
							<output>.</output>
							<generateSupportingFiles>false</generateSupportingFiles>
							<apiPackage>${project.groupId}.api</apiPackage>
							<modelPackage>${project.groupId}.model</modelPackage>
							<invokerPackage>${project.groupId}.api</invokerPackage>
							<generateApis>false</generateApis>
							<skip>false</skip>
							<skipOverwrite>true</skipOverwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<finalName>app</finalName>
	</build>
</project>
